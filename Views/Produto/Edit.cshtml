@model Desafio_Mind_CRUD.Models.ProdutoModel

@{
    ViewData["Title"] = "Editar Produto";
}

<h1>@ViewData["Title"]</h1>

<h4>Utilize os campos abaixo para alterar as informações do produto @Html.DisplayFor(model => model.Nome)!</h4>
<hr />
<div class="form-group pb-5">
    <div class="input-group pt-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group pt-2">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group pt-2">
                <label asp-for="Descricao" class="control-label"></label>
                <input asp-for="Descricao" class="form-control" />
                <span asp-validation-for="Descricao" class="text-danger"></span>
            </div>
            <div class="form-group pt-2">
                <label asp-for="Preco" class="control-label"></label>
                <input asp-for="Preco" class="form-control" />
                <span asp-validation-for="Preco" class="text-danger"></span>
            </div>
            <div class="form-group pt-4 pb-2">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<hr class="" />

<div>
    <a class="btn" asp-action="Index"><i class="fa fa-chevron-circle-left"></i> Voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
